type Query {
  chat: Chat
  message: Message
  place: Place
  ride: Ride
  user: User
  verification: Verification
}

type Chat {
  id: Int!
  messages: [Message]!
  participants: [User]!
  createdAt: String!
  updatedAt: String
}

type Message {
  id: Int!
  text: String!
  chat: Chat!
  user: User!
  createdAt: String!
  updatedAt: String
}

type Place {
  id: Int!
  name: String!
  lat: Float!
  lng: Float!
  address: String!
  isFav: Boolean!
  createdAt: String!
  updatedAt: String
}

type Ride {
  id: Int!
  status: String!
  pickUpAddress: String!
  pickUpLat: Float!
  pickUpLng: Float!
  dropOffAddress: String!
  dropUpLat: Float!
  dropUpLng: Float!
  price: Float!
  distance: String!
  duration: String!
  passenger: User!
  driver: User!
  createdAt: String!
  updatedAt: String
}

type Mutation {
  FacebookConnect(firstName: String!, lastName: String!, email: String, fbId: String!): FacebookConnectResponse
}

type FacebookConnectResponse {
  ok: Boolean!
  error: String
  token: String
}

type User {
  id: Int!
  email: String
  firstName: String!
  lastName: String!
  facebookId: String
  age: Int
  password: String
  phoneNumber: String
  verifiedEmail: Boolean!
  verifiedPhoneNumber: Boolean!
  profilePhoto: String
  fullName: String
  isDriving: Boolean!
  isRiding: Boolean!
  isTaken: Boolean!
  lastLng: Float!
  latLat: Float!
  lastOrientation: Float
  fbId: String
  chat: Chat
  message: [Message]
  verifications: [Verification]
  rideAsPassenger: [Ride]
  rideAsDriver: [Ride]
  createdAt: String!
  updatedAt: String
}

type Verification {
  id: Int!
  target: String!
  payload: String!
  key: String!
  used: Boolean!
  user: User!
  createdAt: String!
  updatedAt: String!
}
